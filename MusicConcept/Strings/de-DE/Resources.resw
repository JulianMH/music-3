<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <data name="AboutAppBarButton.Label" xml:space="preserve">
    <value>Über die App</value>
  </data>
  <data name="AboutPageHeaderText.Text" xml:space="preserve">
    <value>Info</value>
  </data>
  <data name="AboutPageIconsText.Text" xml:space="preserve">
    <value>Grafiken</value>
  </data>
  <data name="AboutPageProgrammingDesignText.Text" xml:space="preserve">
    <value>Programmierung, Design</value>
  </data>
  <data name="DatabaseSettingUpString" xml:space="preserve">
    <value>Erstelle Bibliothek...</value>
  </data>
  <data name="EmptyListViewTextEmptyText.Text" xml:space="preserve">
    <value>Keine Elemente vorhanden.</value>
  </data>
  <data name="EmptyListViewTextLoadingText.Text" xml:space="preserve">
    <value>Erstelle Bibliothek. Dies kann einige Minuten dauern.</value>
  </data>
  <data name="NavigationFailedExceptionMessage" xml:space="preserve">
    <value>Navigation fehlgeschlagen.</value>
  </data>
  <data name="NowPlayingPageCurrentText.Text" xml:space="preserve">
    <value>Aktuell</value>
  </data>
  <data name="NowPlayingPagePlaylistText.Text" xml:space="preserve">
    <value>Playlist</value>
  </data>
  <data name="AlbumsItemHeader" xml:space="preserve">
    <value>Alben</value>
  </data>
  <data name="ArtistsItemHeader" xml:space="preserve">
    <value>Künstler</value>
  </data>
  <data name="PivotPageNowPlayingText.Text" xml:space="preserve">
    <value>Aktuell</value>
  </data>
  <data name="AllSongsItemHeader" xml:space="preserve">
    <value>Songs</value>
  </data>
  <data name="SearchItemHeader" xml:space="preserve">
    <value>Suche</value>
  </data>
  <data name="SearchItemProgressIndicator" xml:space="preserve">
    <value>Suchen...</value>
  </data>
  <data name="LoadPlaylistAppBarButton.Label" xml:space="preserve">
    <value>Gespeicherte Playlist laden</value>
  </data>
  <data name="SavePlaylistAppBarButton.Label" xml:space="preserve">
    <value>Aktuelle Playlist speichern</value>
  </data>
  <data name="MessageDialogNo" xml:space="preserve">
    <value>Nein</value>
  </data>
  <data name="MessageDialogYes" xml:space="preserve">
    <value>Ja</value>
  </data>
  <data name="SaveNewPlaylistNameEmpty" xml:space="preserve">
    <value>Bitte geben Sie einen Namen für diese Playlist ein.</value>
  </data>
  <data name="SaveNewPlaylistNameExists" xml:space="preserve">
    <value>Eine Playlist mit diesem Namen existiert bereits. Wollen sie diese überschreiben?</value>
  </data>
  <data name="SaveNewPlaylistPageNameTextBlock.Text" xml:space="preserve">
    <value>Name</value>
  </data>
  <data name="SaveNewPlaylistPageTitle.Text" xml:space="preserve">
    <value>Playlist speichern</value>
  </data>
  <data name="SaveNewPlaylistPageCancel.Label" xml:space="preserve">
    <value>Abbrechen</value>
  </data>
  <data name="SaveNewPlaylistPageSave.Label" xml:space="preserve">
    <value>Speichern</value>
  </data>
  <data name="SavedPlaylistsViewModelDelete" xml:space="preserve">
    <value>Wollen sie die Playlist "{0}" wirklich löschen?</value>
  </data>
  <data name="MenuFlyoutDelete.Text" xml:space="preserve">
    <value>Löschen</value>
  </data>
  <data name="VersionFormat" xml:space="preserve">
    <value>Version {0}</value>
  </data>
  <data name="AboutPageMailButton.Content" xml:space="preserve">
    <value>Support E-Mail</value>
  </data>
  <data name="AboutPageWebsiteButton.Content" xml:space="preserve">
    <value>Website</value>
  </data>
  <data name="AppName" xml:space="preserve">
    <value>music³</value>
  </data>
  <data name="SupportMailBody" xml:space="preserve">
    <value>Hallo,
Ich nutze {0} in der Version {1} und habe eine Frage oder eine Anregung für zukünftige Versionen:





Vielen Dank im Voraus!
Liebe Grüße</value>
  </data>
  <data name="SupportMailSubject" xml:space="preserve">
    <value>{0}: Fragen und Anregungen</value>
  </data>
  <data name="SupportMailTrial" xml:space="preserve">
    <value>(demo)</value>
  </data>
  <data name="TrialMessageDialog" xml:space="preserve">
    <value>Vielen Dank, dass Sie die Testversion von {0} heruntergeladen haben

Bisher ist diese noch identisch zur gekauften Version, abgesehen davon dass die Vollwersion keine Werbung enthält.

Falls ihnen diese App gefällt, bitte erwägen Sie die Vollversion zu kaufen, um die Weiterentwicklung zu unterstüzen.</value>
  </data>
  <data name="TrialMessageDialogTitle" xml:space="preserve">
    <value>Testversion</value>
  </data>
  <data name="ErrorPageCloseButton.Content" xml:space="preserve">
    <value>Nein</value>
  </data>
  <data name="ErrorPageErrorDataLost" xml:space="preserve">
    <value>Fehlerdaten sind verloren gegangen.</value>
  </data>
  <data name="ErrorPageFirst.Text" xml:space="preserve">
    <value>Entschuldigung! Ein solcher Fehler sollte nicht auftreten.</value>
  </data>
  <data name="ErrorPageHeaderText.Text" xml:space="preserve">
    <value>Fehler</value>
  </data>
  <data name="ErrorPageSecond.Text" xml:space="preserve">
    <value>Wir bitten deshalb darum einen Fehlerbericht an uns zu senden, damit wir diesen Fehler so schnell wie möglich beheben können.</value>
  </data>
  <data name="ErrorPageSendButton.Content" xml:space="preserve">
    <value>Ja, Fehlerbericht senden!</value>
  </data>
  <data name="ErrorPageThird.Text" xml:space="preserve">
    <value>Hierbei werden keine Informationen über die Musikbibliothek übermittelt, nur Deine E-Mail Adresse wird zwecks Rückfragen an uns gesendet.</value>
  </data>
  <data name="ErrorReportBody" xml:space="preserve">
    <value>Hallo,
Ich nutze {0} in der Version {1} und es ist der Fehler {2} aufgetreten:
{3}
Hier eine kurze Beschreibung von mir:




Zusätzliche Informationen:
{4}

Liebe Grüße</value>
  </data>
  <data name="ErrorReportSubject" xml:space="preserve">
    <value>{0}: Fehlerbericht</value>
  </data>
  <data name="AllFiltersPageHeader.Text" xml:space="preserve">
    <value>Musik gefiltert nach</value>
  </data>
  <data name="MusicFiltersAppBarButton.Label" xml:space="preserve">
    <value>Musik gefiltert nach...</value>
  </data>
  <data name="PivotPageEmptyText.Text" xml:space="preserve">
    <value>Alle Musikfilter auf der Hauptseite sind deaktiviert. Unter "Musik gefiltert nach..." im Menü unten können sie wieder aktiviert werden.</value>
  </data>
  <data name="ShowOnMainPageCheckBox.Content" xml:space="preserve">
    <value>Auf Hauptseite anzeigen</value>
  </data>
  <data name="PlaylistsItemHeader" xml:space="preserve">
    <value>Playlists</value>
  </data>
  <data name="MenuFlyoutAddToPlaylist.Text" xml:space="preserve">
    <value>Zur Playlist hinzufügen</value>
  </data>
  <data name="MenuFlyoutListenNext.Text" xml:space="preserve">
    <value>Als nächstes hören</value>
  </data>
  <data name="MenuFlyoutAddAllToPlaylist.Text" xml:space="preserve">
    <value>Alle zur Playlist hinzufügen</value>
  </data>
  <data name="MenuFlyoutListenNextAll.Text" xml:space="preserve">
    <value>Alle an Anfang der Playlist einfügen</value>
  </data>
  <data name="GenresItemHeader" xml:space="preserve">
    <value>Genres</value>
  </data>
  <data name="AlbumCoverFetchPageChoosePicture.Content" xml:space="preserve">
    <value>Aus Fotosammlung auswählen</value>
  </data>
  <data name="AlbumCoverFetchPageXboxMusic.Text" xml:space="preserve">
    <value>Album Cover von XBOX Music</value>
  </data>
  <data name="AlbumCoverFetchViewModelSaveCropError" xml:space="preserve">
    <value>Fehler beim Verwenden des Bildes als Album Cover.</value>
  </data>
  <data name="MenuFlyoutChangeAlbumCover.Text" xml:space="preserve">
    <value>Album Cover ändern</value>
  </data>
  <data name="RemoveAdsButton.Label" xml:space="preserve">
    <value>Werbeanzeigen entfernen</value>
  </data>
  <data name="ReviewMessageContinuedDialog" xml:space="preserve">
    <value>Möchten Sie uns eine Bewertung im Store oder eine E-Mail schreiben?</value>
  </data>
  <data name="ReviewMessageDialog" xml:space="preserve">
    <value>{0} wird noch weiter entwickelt und mit neuen Funktionen ausgestattet. 

Können Sie uns kurz schreiben ob Ihnen music³ gefällt?
Dies hilft uns sehr bei der weiteren Entwicklung.</value>
  </data>
  <data name="ReviewMessageDialogNo" xml:space="preserve">
    <value>Nein</value>
  </data>
  <data name="ReviewMessageDialogTitle" xml:space="preserve">
    <value>Feedback zu {0}</value>
  </data>
  <data name="ReviewMessageDialogYes" xml:space="preserve">
    <value>Ja, gerne!</value>
  </data>
  <data name="ReviewMessageMail" xml:space="preserve">
    <value>E-mail</value>
  </data>
  <data name="ReviewMessageReview" xml:space="preserve">
    <value>Bewertung</value>
  </data>
  <data name="ClearPlaylistAppBarButton.Label" xml:space="preserve">
    <value>Playlist leeren</value>
  </data>
  <data name="AlphabetCyrillic" xml:space="preserve">
    <value>Kyrillisch</value>
  </data>
  <data name="AlphabetGreek" xml:space="preserve">
    <value>Griechisch</value>
  </data>
  <data name="AlphabetLatin" xml:space="preserve">
    <value>Lateinisch</value>
  </data>
  <data name="SettingsButton.Label" xml:space="preserve">
    <value>Einstellungen</value>
  </data>
  <data name="SettingsPageAlphabetHeader.Text" xml:space="preserve">
    <value>Sortieralphabet</value>
  </data>
  <data name="SettingsPageGeneralPivotItem.Header" xml:space="preserve">
    <value>Einstellungen</value>
  </data>
  <data name="SettingsPagePivot.Title" xml:space="preserve">
    <value>music³</value>
  </data>
  <data name="SettingsPageResetWallpaperButton.Content" xml:space="preserve">
    <value>Zurücksetzen</value>
  </data>
  <data name="SettingsPageSelectWallpaperFromLibraryButton.Content" xml:space="preserve">
    <value>Bild wählen</value>
  </data>
  <data name="SettingsPageWallpaperHeader.Text" xml:space="preserve">
    <value>Hintergrundbild</value>
  </data>
  <data name="SongUnknownArtist" xml:space="preserve">
    <value>Unbekannter Künstler</value>
  </data>
  <data name="AboutPageTranslation.Text" xml:space="preserve">
    <value>Collapsed</value>
  </data>
  <data name="AboutPageTranslation.Visibility" xml:space="preserve">
    <value>Collapsed</value>
  </data>
  <data name="AboutPageTranslationPerson.Text" xml:space="preserve">
    <value>Collapsed</value>
  </data>
  <data name="AboutPageTranslationPerson.Visibility" xml:space="preserve">
    <value>Collapsed</value>
  </data>
  <data name="OpenSourceLookAt" xml:space="preserve">
    <value>Projekt ansehen</value>
  </data>
  <data name="OpenSourceMessage" xml:space="preserve">
    <value>{0} ist nun Open Source und umsonst im Store! Ich habe leider alleine nicht mehr genug Zeit um weitere Updates zu entwickeln. Falls jemand Lust hat sich den Code einfach nur anzuschauen oder vielleicht sogar neue Funktionen einzubauen, hier ist der Link zum Projekt: {1}.</value>
  </data>
  <data name="OpenSourceOK" xml:space="preserve">
    <value>OK</value>
  </data>
</root>